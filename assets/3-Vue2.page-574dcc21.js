import { _ as _export_sfc, o as openBlock, c as createElementBlock, a as createStaticVNode, U as Ui } from "./_plugin-vue_export-helper-e63733f0.js";
JSON.parse('{"title":"Vue2 文档页面","description":"","frontmatter":{},"headers":[{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[]},{"level":2,"title":"Loader配置","slug":"loader配置","link":"#loader配置","children":[]}],"relativePath":"src/1-guide/2-documents/2-page/3-Vue2.page.md"}');
const _sfc_main = { name: "3-Vue2.page.md" };
const _hoisted_1 = { class: "archive-md" };
const _hoisted_2 = /* @__PURE__ */ createStaticVNode('<h1 id="vue2-文档页面" tabindex="-1">Vue2 文档页面 <a class="header-anchor" href="#vue2-文档页面" aria-hidden="true">#</a></h1><p>Vue2 SFC 格式的 文档页面 通过Loader <code>@idux/archive-loader-vue2</code> 进行解析以及渲染</p><p><code>@idux/archive-loader-vue2</code> 是实现了 <code>@idux/archive-vite-plugin</code>插件 约束的 <code>Loader</code> 类型的Loader，作为 <code>loaders</code> 参数传入</p><p>详细的插件相关介绍以及 <code>Loader</code> 的类型定义，请查看 <a href="/loader/Brief/">Loader</a></p><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">pnpm add @idux/archive-loader-vue2</span></span>\n<span class="line"></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> defineConfig </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@idux/archive</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> createArchiveVue2PageLoader </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@idux/archive-loader-vue2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineConfig</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">...</span></span>\n<span class="line"><span style="color:#A6ACCD;">  pageLoaders: [</span><span style="color:#82AAFF;">createArchiveVue2PageLoader</span><span style="color:#A6ACCD;">()]</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">...</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><p>配合 <code>vue2</code> 的 <code>vite</code> 插件 <code>vite-plugin-vue2</code>，即可实现对vue2文档页面的引入</p><p>由于目前 <code>.md</code> 文件会被内置插件转换成 vue SFC，因此 <code>.md</code> 文件也依赖该页面Loader进行渲染。</p><h2 id="loader配置" tabindex="-1">Loader配置 <a class="header-anchor" href="#loader配置" aria-hidden="true">#</a></h2><p>参考 <a href="/loader/vue/LoaderOptions/">Vue Loader</a></p>', 11);
const _hoisted_13 = [
  _hoisted_2
];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", _hoisted_1, _hoisted_13);
}
const Component = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "/home/runner/work/archive/archive/docs/src/1-guide/2-documents/2-page/3-Vue2.page.md"]]);
const __archive_data__ = {
  "id": "archive-item-8",
  "filename": "3-Vue2.page.md",
  "relativePath": "1-guide/2-documents/2-page/3-Vue2.page.md",
  "query": {},
  instance: Ui("archive-vue-loader-0", Component)
};
export {
  __archive_data__ as default
};
