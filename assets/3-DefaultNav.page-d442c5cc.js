import { _ as _export_sfc, o as openBlock, c as createElementBlock, b as createCommentVNode, a as createStaticVNode, U as Ui } from "./_plugin-vue_export-helper-e63733f0.js";
JSON.parse('{"title":"内置默认导航与路由解析","description":"","frontmatter":{},"headers":[{"level":2,"title":"单文件文档页面","slug":"单文件文档页面","link":"#单文件文档页面","children":[{"level":3,"title":"页面元信息","slug":"页面元信息","link":"#页面元信息","children":[]},{"level":3,"title":"Markdown 文档页面","slug":"markdown-文档页面","link":"#markdown-文档页面","children":[]},{"level":3,"title":"Vue 文档页面","slug":"vue-文档页面","link":"#vue-文档页面","children":[]}]},{"level":2,"title":"Demo 页面","slug":"demo-页面","link":"#demo-页面","children":[{"level":3,"title":"页面元信息","slug":"页面元信息-1","link":"#页面元信息-1","children":[]}]},{"level":2,"title":"多标签页面","slug":"多标签页面","link":"#多标签页面","children":[{"level":3,"title":"tab 文件","slug":"tab-文件","link":"#tab-文件","children":[]},{"level":3,"title":"Demo 标签页","slug":"demo-标签页","link":"#demo-标签页","children":[]}]},{"level":2,"title":"父子导航","slug":"父子导航","link":"#父子导航","children":[]},{"level":2,"title":"修改默认导航","slug":"修改默认导航","link":"#修改默认导航","children":[]}],"relativePath":"src/1-guide/1-introdoction/3-DefaultNav.page.md"}');
const _sfc_main = { name: "3-DefaultNav.page.md" };
const _hoisted_1 = { class: "archive-md" };
const _hoisted_2 = /* @__PURE__ */ createStaticVNode('<h1 id="内置默认导航与路由解析" tabindex="-1">内置默认导航与路由解析 <a class="header-anchor" href="#内置默认导航与路由解析" aria-hidden="true">#</a></h1><p>如果在配置文件 <code>archive.config.js</code> 中不配置 <code>navConfig</code>，则会使用内置默认的解析方式来解析导航和路由，即根据目录结构解析。</p><h2 id="单文件文档页面" tabindex="-1">单文件文档页面 <a class="header-anchor" href="#单文件文档页面" aria-hidden="true">#</a></h2><p>在某一级目录中（包括根目录）创建以 <code>.page.{vue,md}</code> 结尾的文件，该文件将被解析为一个独立的文档页面，其不包括任何标签页</p><h3 id="页面元信息" tabindex="-1">页面元信息 <a class="header-anchor" href="#页面元信息" aria-hidden="true">#</a></h3><ul><li>导航名称：文件名在 <code>.page.{vue,md}</code> 前的部分文字</li><li>ID：文件名在 <code>.page.{vue,md}</code> 前的部分文字</li><li>标题：文件名在 <code>.page.{vue,md}</code> 前的部分文字</li><li>描述：无</li></ul><h3 id="markdown-文档页面" tabindex="-1">Markdown 文档页面 <a class="header-anchor" href="#markdown-文档页面" aria-hidden="true">#</a></h3><p>内置的vite插件可以解析 <code>.md</code> 文件为vue SFC，前提是需要配置 <code>vite.config.ts</code> 的 <code>include</code> 字段接受 <code>.md</code> 文件，自此 md 文件将与 vue 文件一样都可作为 vue 组件被引入。</p><p>因此，创建 <code>.page.md</code> 结尾的文件将可以被解析成文档页面。</p>', 9);
const _hoisted_11 = /* @__PURE__ */ createStaticVNode('<h3 id="vue-文档页面" tabindex="-1">Vue 文档页面 <a class="header-anchor" href="#vue-文档页面" aria-hidden="true">#</a></h3><p>基于 <code>@idux/archive-loader-vue</code>，Idux Archive 可以将 vue SFC 解析为 <code>ArchiveInstance</code> 并添加为文档页面，在任意目录创建 <code>.page.vue</code> 结尾的文件即可。</p><blockquote><p>关于 <code>Loader</code> 相关请查看<a href="/guide/customization/Loader/">Loader</a></p></blockquote><h2 id="demo-页面" tabindex="-1">Demo 页面 <a class="header-anchor" href="#demo-页面" aria-hidden="true">#</a></h2><p>创建一个文件夹，该文件夹中仅包含 <code>demo</code> 文件，同时不包含 <code>tab</code> 文件，则该文件夹作为一个 Demo 页面。</p><p>例如：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">.</span></span>\n<span class="line"><span style="color:#A6ACCD;">├─ docs</span></span>\n<span class="line"><span style="color:#A6ACCD;">│  └─ demoPage</span></span>\n<span class="line"><span style="color:#A6ACCD;">|     ├─ HelloWorld.vue</span></span>\n<span class="line"><span style="color:#A6ACCD;">|     ├─ Demo1.demo.vue</span></span>\n<span class="line"><span style="color:#A6ACCD;">|     └─ Demo2.demo.vue</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><code>demoPage</code> 文件夹将被解析为一个 Demo 页面，包含 <code>Demo1.demo.vue</code>、<code>Demo2.demo.vue</code> 两个 demo。</p><div class="info custom-block"><p class="custom-block-title">demo 除了 vue 格式以外还可以是其他的任何格式，具体请查看 <a href="/guide/documents/demo/Brief">Demo 编写</a></p></div><h3 id="页面元信息-1" tabindex="-1">页面元信息 <a class="header-anchor" href="#页面元信息-1" aria-hidden="true">#</a></h3><ul><li>导航名称：文件夹名称</li><li>ID：文件夹名称</li><li>标题：文件夹名称</li><li>描述：无</li></ul><h2 id="多标签页面" tabindex="-1">多标签页面 <a class="header-anchor" href="#多标签页面" aria-hidden="true">#</a></h2><p>创建一个文件夹，该文件夹中包含至少一个 <code>tab</code> 文件，包含0-n个 <code>demo</code> 文件，则该文件夹作为一个多标签页面。</p><p>例如：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">.</span></span>\n<span class="line"><span style="color:#A6ACCD;">├─ docs</span></span>\n<span class="line"><span style="color:#A6ACCD;">│  └─ tabPage</span></span>\n<span class="line"><span style="color:#A6ACCD;">|     ├─ Tab.tab.vue</span></span>\n<span class="line"><span style="color:#A6ACCD;">|     └─ Demo.demo.vue</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><code>tabPage</code> 文件夹作为一个多标签页面。</p><h3 id="tab-文件" tabindex="-1"><code>tab</code> 文件 <a class="header-anchor" href="#tab-文件" aria-hidden="true">#</a></h3><p>一个多标签页面文件夹中所有的 <code>.tab.{vue,md}</code> 文件均会被解析成标签页，解析的原理和过程与<a href="#%E5%8D%95%E6%96%87%E4%BB%B6%E6%96%87%E6%A1%A3%E9%A1%B5%E9%9D%A2">单文件文档页面</a>相同。</p><h4 id="tab-元信息解析" tabindex="-1">tab 元信息解析 <a class="header-anchor" href="#tab-元信息解析" aria-hidden="true">#</a></h4><ul><li>ID：文件名在 <code>.tab.{vue,md}</code> 的部分</li><li>tab名称：文件名在 <code>.tab.{vue,md}</code> 的部分</li></ul><h3 id="demo-标签页" tabindex="-1">Demo 标签页 <a class="header-anchor" href="#demo-标签页" aria-hidden="true">#</a></h3><p>一个多标签页面文件夹中所有的 <code>demo</code> 文件将被集中作为一个 Demo 标签页。</p><h4 id="tab-元信息解析-1" tabindex="-1">tab 元信息解析 <a class="header-anchor" href="#tab-元信息解析-1" aria-hidden="true">#</a></h4><ul><li>ID：<code>&#39;demos&#39;</code></li><li>tab名称：<code>&#39;Demos&#39;</code></li></ul><div class="warning custom-block"><p class="custom-block-title">注意，如果一个文件夹中已经有 <code>tab</code> 文件或者 <code>demo</code> 文件，其中的 <code>page</code> 文件将不会被解析</p></div><h2 id="父子导航" tabindex="-1">父子导航 <a class="header-anchor" href="#父子导航" aria-hidden="true">#</a></h2><p>一个不包含任何 <code>tab</code> 文件或 <code>demo</code> 文件的文件夹，如果它拥有子文件夹，则该文件夹被解析为一个父级导航，其下的 <code>page</code> 文件以及子文件夹将被解析为子导航。</p><p>反之，如果该文件夹中有至少一个 <code>tab</code> 文件或 <code>demo</code> 文件，那么它不会被解析为父级导航，其下的子目录也不会被解析。</p><h2 id="修改默认导航" tabindex="-1">修改默认导航 <a class="header-anchor" href="#修改默认导航" aria-hidden="true">#</a></h2><p>可以通过<code>navConfig</code>来自定义导航，同时可以借助 <code>@idux/archive-utils</code> 中的函数来辅助自定义。</p>', 30);
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", _hoisted_1, [
    _hoisted_2,
    createCommentVNode(" > 更多 Markdown 编写相关内容请查看 // TODO "),
    _hoisted_11,
    createCommentVNode(" // TODO 跳转 ")
  ]);
}
const Component = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "/home/runner/work/archive/archive/docs/src/1-guide/1-introdoction/3-DefaultNav.page.md"]]);
const __archive_data__ = {
  "id": "archive-item-2",
  "filename": "3-DefaultNav.page.md",
  "relativePath": "1-guide/1-introdoction/3-DefaultNav.page.md",
  "query": {},
  instance: Ui("archive-vue-loader-0", Component)
};
export {
  __archive_data__ as default
};
