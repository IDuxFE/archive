import { _ as _export_sfc, o as openBlock, c as createElementBlock, a as createStaticVNode, U as Ui } from "./_plugin-vue_export-helper-e63733f0.js";
JSON.parse('{"title":"在自编写页面中使用 Demo","description":"","frontmatter":{},"headers":[{"level":2,"title":"Demo 的引入","slug":"demo-的引入","link":"#demo-的引入","children":[]},{"level":2,"title":"Demo 实例创建","slug":"demo-实例创建","link":"#demo-实例创建","children":[]},{"level":2,"title":"使用说明","slug":"使用说明","link":"#使用说明","children":[{"level":3,"title":"在 vue3 文件中使用","slug":"在-vue3-文件中使用","link":"#在-vue3-文件中使用","children":[]},{"level":3,"title":"在 vue2 文件中使用","slug":"在-vue2-文件中使用","link":"#在-vue2-文件中使用","children":[]},{"level":3,"title":"在 markdown 文件中使用","slug":"在-markdown-文件中使用","link":"#在-markdown-文件中使用","children":[]}]}],"relativePath":"src/1-guide/4-advanced/1-DemoInPage.page.md"}');
const _sfc_main = { name: "1-DemoInPage.page.md" };
const _hoisted_1 = { class: "archive-md" };
const _hoisted_2 = /* @__PURE__ */ createStaticVNode('<h1 id="在自编写页面中使用-demo" tabindex="-1">在自编写页面中使用 Demo <a class="header-anchor" href="#在自编写页面中使用-demo" aria-hidden="true">#</a></h1><p>Idux Archive 本质上通过 <code>@idux/archive-vite-plugin</code> 实现了对 <code>demo</code> 的解析，转换成统一的 <code>item</code>，因此除了利用 app 框架进行约定的 <code>demo</code> 组织，也可以只利用 <code>@idux/archive-vite-plugin</code> 的功能引入 <code>demo</code> 并自行编写页面。</p><h2 id="demo-的引入" tabindex="-1">Demo 的引入 <a class="header-anchor" href="#demo-的引入" aria-hidden="true">#</a></h2><p>参考 <a href="/loader/Brief/">Loader</a>。</p><h2 id="demo-实例创建" tabindex="-1">Demo 实例创建 <a class="header-anchor" href="#demo-实例创建" aria-hidden="true">#</a></h2><p><code>demo</code> 在加载之后需要通过一套 app 框架组织和渲染，而默认提供的 app 框架 <code>@idux/archvie-app</code> 则暴露了其内部 Demo 的完整展示组件。</p><p>为了在不同的框架下使用 Demo 组件，不用提供 <code>vue</code> 组件，而是一个 <code>Instance</code>, 通过暴露的 <code>createDemoInstance</code> 创建。</p><p>其声名如下：</p><div class="language-ts"><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">createDemoInstance</span><span style="color:#89DDFF;">(</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;">resolvedDemoItem</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ResolvedDemoItem</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;">tools</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">DemoTool</span><span style="color:#A6ACCD;">[]</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">setupApp</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">App</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">void</span></span>\n<span class="line"><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Instance</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">object</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">...</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><blockquote><p>有关 <code>DemoTool</code> 类型请参考 <a href="/config/Setup/">初始化脚本</a> 有关 <code>ResolvedDemoItem</code> 类型请参考 <a href="/loader/Item/">LoadedItem</a></p></blockquote><h2 id="使用说明" tabindex="-1">使用说明 <a class="header-anchor" href="#使用说明" aria-hidden="true">#</a></h2><h3 id="在-vue3-文件中使用" tabindex="-1">在 vue3 文件中使用 <a class="header-anchor" href="#在-vue3-文件中使用" aria-hidden="true">#</a></h3><p><code>@idux/archive-loader-vue</code> 暴露了将 <code>instance</code> 转换为 <code>vue</code> 组件的方法 <code>createComponent</code>。</p><p>引入 <code>demo</code> 并创建了Demo实例之后，可以通过以下方式渲染 Demo：</p><div class="language-vue"><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">DemoComp</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#FFCB6B;">DemoComp</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">setup</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">lang</span><span style="color:#A6ACCD;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> item </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">archive-demo:./demoPage1/HelloWorld.demo.vue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">createDemoInstance</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@idux/archive-app/components</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">createComponent</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@idux/archive-loader-vue/client</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> DemoComp </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">createComponent</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">createDemoInstance</span><span style="color:#A6ACCD;">(item))</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><h3 id="在-vue2-文件中使用" tabindex="-1">在 vue2 文件中使用 <a class="header-anchor" href="#在-vue2-文件中使用" aria-hidden="true">#</a></h3><p><code>@idux/archive-loader-vue2</code> 也暴露了创建组件的方法。</p><div class="language-vue"><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">DemoComp</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#FFCB6B;">DemoComp</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">lang</span><span style="color:#A6ACCD;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> item </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">archive-demo:./demoPage1/HelloWorld.demo.vue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">createDemoInstance</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@idux/archive-app/components</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">createComponent</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@idux/archive-loader-vue2/client</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> DemoComp </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">createComponent</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">createDemoInstance</span><span style="color:#A6ACCD;">(item))</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">components</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    DemoComp</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><h3 id="在-markdown-文件中使用" tabindex="-1">在 markdown 文件中使用 <a class="header-anchor" href="#在-markdown-文件中使用" aria-hidden="true">#</a></h3><p>基于 <code>@idux/archive-vite-markdown-plugin</code>，<code>.md</code> 会被转换成 <code>vue SFC</code> 文件通过 <code>vue3</code> 或者 <code>vue2</code> 的 <code>vite</code> 插件解析。</p><p>可以通过以下方式使用：</p><div class="language-md"><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">&lt;script setup&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">import item from &#39;archive-demo:./demoPage1/HelloWorld.demo.vue&#39;;</span></span>\n<span class="line"><span style="color:#A6ACCD;">import { createDemoInstance } from &#39;@idux/archive-app/components&#39;</span></span>\n<span class="line"><span style="color:#A6ACCD;">import { createComponent } from &#39;@idux/archive-loader-vue/client&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">const DemoComp = createComponent(createDemoInstance(item))</span></span>\n<span class="line"><span style="color:#A6ACCD;">&lt;/script&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;"># </span><span style="color:#FFCB6B;">Title</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">## </span><span style="color:#FFCB6B;">Demos</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">### </span><span style="color:#FFCB6B;">Demo1</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">this is demo</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">&lt;DemoComp/&gt;</span></span>\n<span class="line"></span></code></pre></div>', 22);
const _hoisted_24 = [
  _hoisted_2
];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", _hoisted_1, _hoisted_24);
}
const Component = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "/home/runner/work/archive/archive/docs/src/1-guide/4-advanced/1-DemoInPage.page.md"]]);
const __archive_data__ = {
  "id": "archive-item-15",
  "filename": "1-DemoInPage.page.md",
  "relativePath": "1-guide/4-advanced/1-DemoInPage.page.md",
  "query": {},
  instance: Ui("archive-vue-loader-0", Component)
};
export {
  __archive_data__ as default
};
